name: Build and Test

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          architecture: 'x64'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          rm minikube-linux-amd64

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          rm kubectl

      - name: Start Minikube
        run: |
          minikube start --driver=docker
          minikube status

      - name: Start Minikube Tunnel
        run: |
          nohup minikube tunnel > tunnel.log 2>&1 &
          sleep 10  # Give tunnel time to establish

      - name: Build Ansible Collection
        run: make build

      - name: Install Ansible Collections from requirements
        run: |
          if [ -f collections/requirements.txt ]; then
            ansible-galaxy collection install -r collections/requirements.txt
          fi

      - name: Run Tests
        run: |
          python3 -m make hello

      - name: Archive test results
        if: always()  # This ensures the step runs even if previous steps fail
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            scenarios/hello-world/hello-world.yml
            scenarios/**/test-*.xml
            scenarios/**/junit-*.xml
            scenarios/**/report-*.html
          retention-days: 14

      - name: Stop Minikube
        if: always()
        run: |
          pkill -f "minikube tunnel"
          minikube stop
          minikube delete